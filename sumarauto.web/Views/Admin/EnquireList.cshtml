
@{
    ViewBag.Title = "EnquireList";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

<style>
    span strong {
        color: black !important;
    }

    .ti-thumb-up, .ti-thumb-down, .ti-settings {
        font-size: 24px;
    }
</style>
<div class="container-fluid">
    <div class="card my-2">
        <div class="card-body d-flex justify-content-between align-items-center">
            <div style="margin-right:10px;">
                <h5 class="card-title fw-semibold mb-0 pb-0">Manage Inquiries</h5>
            </div>
            <div>
                <select class="form-select shadow-sm bg-light" aria-label="Select Filter" id="filterType">
                    <option value="1" selected="">Active</option>
                    <option value="0">In Active</option>
                    <option value="2">Select All</option>
                </select>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <table id="APList" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th>Details</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Date</th>
                        <th>Product</th>
                        <th style="background-image: none; cursor: auto; text-align:center;">Status</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<script>
    let table = initializeDataTable(1);
    const filterType = document.getElementById("filterType");
    if (filterType) {
        filterType.addEventListener("change", function () {
            filterTypeId = this.value;
            table.destroy();
            table = initializeDataTable(filterTypeId);
            if (filterTypeId == 1 || filterTypeId == 2) {
                table.columns().visible(true);
            }
        });
    }
    function initializeDataTable(filterTypeId) {
        return new DataTable('#APList', {
            ajax: {
                url: '/Helper/GetEnquireList',
                type: 'POST',
                data: { dropdownId: filterTypeId },
                dataSrc: 'data'
        },
        columns: [
            {
                class: 'dt-control',
                orderable: false,
                data: null,
                defaultContent: ''
            },
            { data: 'Name', orderable: true, },
            { data: 'Email', orderable: false, },
            { data: 'CreatedOnString', orderable: false, },
            { data: 'Product', orderable: false, },
            {
                class: 'handleButtonStatus',
                "data": "Id",
                orderable: false,
                render: function (data, type, row) {
                    let trueValue = `<svg  xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-checkbox" width="26" height="26" viewBox="0 0 24 24" stroke-width="1.5" stroke="#00b341" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 11l3 3l8 -8" /><path d="M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9" /></svg>`;
                    let falseValue = `<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-square-x" width="26" height="26" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ff2825" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" /><path d="M9 9l6 6m0 -6l-6 6" /></svg>`;
                    return row.Status ? trueValue : falseValue;
                }
            },
        ],
        order: [[1, 'asc']],
        processing: true,
        serverSide: true,
        stateSave: true
        });
    }
    table.on('draw', () => {
        detailRows.forEach((id, i) => {
            let el = document.querySelector('#' + id + ' td.dt-control');

            if (el) {
                el.dispatchEvent(new Event('click', { bubbles: true }));
            }
        });
    });
    table.on('click', 'tbody td.handleButtonStatus', function (event) {
        let tr = event.target.closest('tr');
        let row = table.row(tr);
        let data = row.data();
        let id = data["Id"];
          Swal.fire({
            title: 'Are you sure?',
            text: "You want to change the status",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
            url: '@Url.Action("StatusChange", "Helper")',
            data: {
                Id: id,
                Type: 'ContactForm'
            }
                })
                    .done(function (response) {
                        if (response.Result == true) {
                            Swal.fire({
                                title: 'Done',
                                text: 'Successfully Changed the status!',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!',
                            })
                        }
                    })
                    .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!',
                        })
                    });
            }
        })
    });

    const detailRows = [];
    function format(d) {
        var data = d;
        return (
            `<div class="card"><div class="m-4 detailViewDiv text-lg-start card-body m-0 p-0">
             <h5 class="mb-3">Complete Details</h5>
             <div class="row">
                          <div class="col-6 mb-2">
             <span><strong>Company Name:</strong> ${data.CompanyName}</span>
             </div>
             <div class="col-6 mb-2">
             <span><strong>Phone:</strong> ${data.Phone}</span>
             </div>
             <div class="col-6 mb-2">
             <span><strong>Country:</strong> ${data.Country}</span>
             </div>
             <div class="col-6 mb-2">
             <span><strong>City:</strong> ${data.City}</span>
             </div>
             <div class="col-12 mb-2">
             <span><strong>Enquire:</strong> ${data.Comment}</span>
             </div>
             </div>
            </div></div>`
        );
    }
    table.on('click', 'tbody td.dt-control', function (event) {
        let tr = event.target.closest('tr');
        let row = table.row(tr);
        let idx = detailRows.indexOf(tr.id);
        if (row.child.isShown()) {
            tr.classList.remove('details');
            row.child.hide();
            detailRows.splice(idx, 1);
        } else {
            tr.classList.add('details');
            row.child(format(row.data())).show();
            $('.status-checkbox').change(function () {
                var isChecked = $(this).is(':checked');
                var postId = $(this).data('id');
                updateStatus(postId, 'Status', isChecked);
            });
            if (idx === -1) {
                detailRows.push(tr.id);
            }
        }
    });
</script>