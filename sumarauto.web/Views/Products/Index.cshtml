@{
    ViewBag.Title = "Products";
    ViewBag.Description = "Sumar Auto Parts in Dubai offers genuine auto " +
                "parts, OEM parts, and accessories for all car models. Fast delivery, " +
                "competitive prices, and expert assistance. Shop now!";
    ViewBag.Image = "";
}
<style>
    .search-box .bootstrap-select {
        border: 1px solid var(--bg);
        width: 100% !important;
        color: var(--bg);
    }
    .search-container {
        padding: 0;
    }

    .overlap-form {
        color: #1e1e1e;
    }


        .products-container {
            padding: 5rem 0;
        }

    .form_book {
        background: var(--text);
        padding: 20px 33px;
    }

    .boo-btn {
        align-self: center;
        text-align: center;
    }

        .boo-btn button {
            padding: 10px 30px;
            border-radius: 50px;
            border: none;
            background-color: var(--bg);
            color: var(--text);
        }

    .search-text {
        background-color: var(--text);
        padding: 6px 2px;
        border: 1px solid var(--bg);
        color: var(--bg);
        width: 100%
    }

    .products-container {
        padding: 5rem 0;
    }

    .product-card, .product-box {
        padding: 2rem;
    }

    .product-desc {
        padding-top: 1.3rem;
    }

        .product-box {
            border-radius: 5px;
            background-color: white;
            border-top: 5px solid var(--primary);
        }

    .product-desc {
        color: var(--text);
    }

        .product-desc H4 {
            text-transform: uppercase;
        }

        .product-spec h6 {
            color: var(--primary);
            text-transform: uppercase;
        }

    .product-box img {
        border: 5px solid var(--text);
        border-radius: 10px;
    }
</style>

<div class="products-container container">
    <div class="row justify-content-center" id="filtereProducts">
        <div class="spinner-border text-dark" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
    <!-- Pagination Controls -->
    <div class="pagination-container">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center" id="pagination">
                <!-- Pagination buttons will be generated dynamically -->
            </ul>
        </nav>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = 1;
        let productsPerPage = 9;
        getAllFilterProducts(currentPage, productsPerPage);
    });
    const productContainer = document.getElementById('filtereProducts');
    function getAllFilterProducts(page, pageSize) {
            const TempCat = '@TempData["Category"]' || localStorage.getItem("TempCat") || "0";
            const TempMake = '@TempData["Make"]' || localStorage.getItem("TempMake") || "0";
            const TempModel = '@TempData["Model"]' || localStorage.getItem("TempModel") || "0";
            const TempYear = '@TempData["Years"]' || localStorage.getItem("TempYear") || "0";
            const TempEngine = '@TempData["Engine"]' || localStorage.getItem("TempEngine") || "0";
            const TempLiter = '@TempData["Liters"]' || localStorage.getItem("TempLiter") || "0";
            const TempChassis = '@TempData["Chassis"]' || localStorage.getItem("TempChassis") || "0";
        const TempsearchInput = '@TempData["Search"]' || localStorage.getItem("TempsearchInput") || "";
        let urlVal = `/Products/GetAllFilterProducts?draw=${page}&start=${(page - 1) * pageSize}&length=${pageSize}&Category=${TempCat}&Brand=${TempMake}&Model=${TempModel}&Years=${TempYear}&Engine=${TempEngine}&Liters=${TempLiter}&Chassis=${TempChassis}&Search=${TempsearchInput}`;
        $.ajax({
           type: 'POST',
           url: urlVal,
        })
        .done(function (response) {
            if (response.products && response.products.length > 0) {
                renderProducts(response.products);
                setupPagination(response.totalCount, pageSize, page);
            }
            else {
                productContainer.innerHTML = '<h6 class="text-center">No data available!</h6>';
            }
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            })
        });
    }
    const renderProducts = (products) => {
        productContainer.innerHTML = '';
        products.forEach(product => {
            let htmlrow = "";
            if (product != null && product.ProductMake != null) {
                product.ProductMake.forEach(item => {
                    htmlrow += `      <tr>
      <td>${item.Make}</td>
      <td>${item.Model}</td>
      <td>${item.Year}</td>
    </tr>`;
                });
            }
            productContainer.innerHTML += `
    <div class="col-lg-4 col-md-6 col-12 product-card">
        <a href="/Product/${product.Title}">
            <div class="product-box">
                <img src="${product.ImageUrl}" />
                <div class="product-desc">
                    <H4>${product.Title}</H4>
                    <div class="d-flex justify-content-between">
                        <p>${product.Description}</p>
                        <small class="mb-3">${product.Package}</small>
                    </div>
                    <div class="row justify-content-between product-spec">
                    <table class="table table-borderless">
                      <thead>
    <tr>
      <th scope="col" class="make">Make</th>
      <th scope="col" class="model">Model</th>
      <th scope="col" class="year">Year</th>
    </tr>
  </thead>
  <tbody>
  ${htmlrow}
  </tbody>
                    </table>
                    </div>
                </div>
            </div>
        </a>
    </div>
`;
        });
    };
    const setupPagination = (totalCount, pageSize, currentPage) => {
        const totalPages = Math.ceil(totalCount / pageSize);
        const pagination = document.getElementById('pagination');
        pagination.innerHTML = '';

        // Generate pagination buttons
        for (let i = 1; i <= totalPages; i++) {
            const activeClass = i === currentPage ? 'active' : '';
            pagination.innerHTML += `
                <li class="page-item ${activeClass}">
                    <a class="page-link" href="javascript:void(0);" onclick="getAllFilterProducts(${i}, ${pageSize})">${i}</a>
                </li>
            `;
        }
    };
</script>